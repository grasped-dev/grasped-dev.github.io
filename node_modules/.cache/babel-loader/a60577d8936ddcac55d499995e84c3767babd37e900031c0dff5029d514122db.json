{"ast":null,"code":"var _jsxFileName = \"/Users/megansmacmini/grasped-dev.github.io/src/LetterDropGame.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\n\n// Letter frequency distribution to bias toward common letters\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LETTER_FREQUENCIES = {\n  A: 9,\n  B: 2,\n  C: 2,\n  D: 4,\n  E: 12,\n  F: 2,\n  G: 3,\n  H: 2,\n  I: 9,\n  J: 1,\n  K: 1,\n  L: 4,\n  M: 2,\n  N: 6,\n  O: 8,\n  P: 2,\n  Q: 1,\n  R: 6,\n  S: 4,\n  T: 6,\n  U: 4,\n  V: 2,\n  W: 2,\n  X: 1,\n  Y: 2,\n  Z: 1\n};\n\n// Scrabble letter values\nconst LETTER_VALUES = {\n  A: 1,\n  B: 3,\n  C: 3,\n  D: 2,\n  E: 1,\n  F: 4,\n  G: 2,\n  H: 4,\n  I: 1,\n  J: 8,\n  K: 5,\n  L: 1,\n  M: 3,\n  N: 1,\n  O: 1,\n  P: 3,\n  Q: 10,\n  R: 1,\n  S: 1,\n  T: 1,\n  U: 1,\n  V: 4,\n  W: 4,\n  X: 8,\n  Y: 4,\n  Z: 10\n};\n\n// English word list for validation (simplified for demo)\n// In a full implementation, you would import a comprehensive dictionary\nconst WORD_LIST = {\n  \"apple\": true,\n  \"banana\": true,\n  \"cat\": true,\n  \"dog\": true,\n  \"elephant\": true,\n  \"fox\": true,\n  \"giraffe\": true,\n  \"hat\": true,\n  \"ice\": true,\n  \"jacket\": true,\n  \"kite\": true,\n  \"lamp\": true,\n  \"mouse\": true,\n  \"nest\": true,\n  \"orange\": true,\n  \"pen\": true,\n  \"queen\": true,\n  \"rat\": true,\n  \"sun\": true,\n  \"tree\": true,\n  \"umbrella\": true,\n  \"vase\": true,\n  \"water\": true,\n  \"xylophone\": true,\n  \"yacht\": true,\n  \"zebra\": true,\n  \"car\": true,\n  \"ball\": true,\n  \"book\": true,\n  \"door\": true,\n  \"ear\": true,\n  \"fish\": true,\n  \"game\": true,\n  \"hand\": true,\n  \"ink\": true,\n  \"jar\": true,\n  \"key\": true,\n  \"leg\": true,\n  \"man\": true,\n  \"nose\": true,\n  \"owl\": true,\n  \"pig\": true,\n  \"quilt\": true,\n  \"road\": true,\n  \"sea\": true,\n  \"toe\": true,\n  \"van\": true,\n  \"wing\": true,\n  \"box\": true,\n  \"yak\": true,\n  \"zoo\": true,\n  \"and\": true,\n  \"bat\": true,\n  \"cab\": true,\n  \"dam\": true,\n  \"eel\": true,\n  \"fan\": true,\n  \"gun\": true,\n  \"hat\": true,\n  \"inn\": true,\n  \"joy\": true,\n  \"kit\": true,\n  \"lid\": true,\n  \"map\": true,\n  \"net\": true,\n  \"oil\": true,\n  \"pat\": true,\n  \"red\": true,\n  \"sad\": true,\n  \"tag\": true,\n  \"use\": true,\n  \"vet\": true,\n  \"win\": true,\n  \"yes\": true,\n  \"zip\": true,\n  \"ace\": true,\n  \"bad\": true,\n  \"cup\": true,\n  \"dry\": true,\n  \"end\": true,\n  \"fat\": true,\n  \"gas\": true,\n  \"hot\": true,\n  \"ice\": true,\n  \"job\": true,\n  \"kid\": true,\n  \"low\": true,\n  \"mad\": true,\n  \"nap\": true,\n  \"odd\": true,\n  \"pal\": true,\n  \"ran\": true,\n  \"sit\": true,\n  \"top\": true,\n  \"but\": true,\n  \"the\": true,\n  \"and\": true,\n  \"you\": true,\n  \"for\": true,\n  \"not\": true,\n  \"all\": true,\n  \"new\": true,\n  \"day\": true,\n  \"get\": true,\n  \"was\": true,\n  \"can\": true,\n  \"out\": true,\n  \"see\": true,\n  \"use\": true,\n  \"now\": true,\n  \"who\": true,\n  \"may\": true,\n  \"way\": true,\n  \"did\": true,\n  \"big\": true,\n  \"old\": true,\n  \"ask\": true,\n  \"few\": true,\n  \"far\": true,\n  \"let\": true,\n  \"run\": true,\n  \"try\": true,\n  \"set\": true,\n  \"put\": true,\n  \"any\": true,\n  \"his\": true,\n  \"her\": true,\n  \"him\": true,\n  \"our\": true,\n  \"she\": true\n};\n\n// Utility function for class name merging\nconst cn = (...classes) => classes.filter(Boolean).join(' ');\n\n// ShootingStars component\nconst ShootingStars = ({\n  minSpeed = 10,\n  maxSpeed = 30,\n  minDelay = 1200,\n  maxDelay = 4200,\n  starColor = \"#9E00FF\",\n  trailColor = \"#2EB9DF\",\n  starWidth = 10,\n  starHeight = 1,\n  className\n}) => {\n  _s();\n  const [star, setStar] = useState(null);\n  const svgRef = useRef(null);\n  const getRandomStartPoint = () => {\n    const side = Math.floor(Math.random() * 4);\n    const offset = Math.random() * window.innerWidth;\n    switch (side) {\n      case 0:\n        return {\n          x: offset,\n          y: 0,\n          angle: 45\n        };\n      case 1:\n        return {\n          x: window.innerWidth,\n          y: offset,\n          angle: 135\n        };\n      case 2:\n        return {\n          x: offset,\n          y: window.innerHeight,\n          angle: 225\n        };\n      case 3:\n        return {\n          x: 0,\n          y: offset,\n          angle: 315\n        };\n      default:\n        return {\n          x: 0,\n          y: 0,\n          angle: 45\n        };\n    }\n  };\n  useEffect(() => {\n    const createStar = () => {\n      const {\n        x,\n        y,\n        angle\n      } = getRandomStartPoint();\n      const newStar = {\n        id: Date.now(),\n        x,\n        y,\n        angle,\n        scale: 1,\n        speed: Math.random() * (maxSpeed - minSpeed) + minSpeed,\n        distance: 0\n      };\n      setStar(newStar);\n      const randomDelay = Math.random() * (maxDelay - minDelay) + minDelay;\n      setTimeout(createStar, randomDelay);\n    };\n    createStar();\n    return () => {};\n  }, [minSpeed, maxSpeed, minDelay, maxDelay]);\n  useEffect(() => {\n    const moveStar = () => {\n      if (star) {\n        setStar(prevStar => {\n          if (!prevStar) return null;\n          const newX = prevStar.x + prevStar.speed * Math.cos(prevStar.angle * Math.PI / 180);\n          const newY = prevStar.y + prevStar.speed * Math.sin(prevStar.angle * Math.PI / 180);\n          const newDistance = prevStar.distance + prevStar.speed;\n          const newScale = 1 + newDistance / 100;\n          if (newX < -20 || newX > window.innerWidth + 20 || newY < -20 || newY > window.innerHeight + 20) {\n            return null;\n          }\n          return {\n            ...prevStar,\n            x: newX,\n            y: newY,\n            distance: newDistance,\n            scale: newScale\n          };\n        });\n      }\n    };\n    const animationFrame = requestAnimationFrame(moveStar);\n    return () => cancelAnimationFrame(animationFrame);\n  }, [star]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    className: cn(\"w-full h-full absolute inset-0\", className),\n    children: [star && /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: star.x,\n      y: star.y,\n      width: starWidth * star.scale,\n      height: starHeight,\n      fill: \"url(#gradient)\",\n      transform: `rotate(${star.angle}, ${star.x + starWidth * star.scale / 2}, ${star.y + starHeight / 2})`\n    }, star.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"defs\", {\n      children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n        id: \"gradient\",\n        x1: \"0%\",\n        y1: \"0%\",\n        x2: \"100%\",\n        y2: \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n          offset: \"0%\",\n          style: {\n            stopColor: trailColor,\n            stopOpacity: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n          offset: \"100%\",\n          style: {\n            stopColor: starColor,\n            stopOpacity: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(ShootingStars, \"7Ikn3hdHqdmQk/sl7XaPR8O9zfg=\");\n_c = ShootingStars;\nconst LetterDropGame = () => {\n  _s2();\n  // Game state\n  const [grid, setGrid] = useState(Array(8).fill().map(() => Array(8).fill(null)));\n  const [currentLetter, setCurrentLetter] = useState('');\n  const [nextLetter, setNextLetter] = useState('');\n  const [selectedColumn, setSelectedColumn] = useState(3);\n  const [selectedCells, setSelectedCells] = useState([]);\n  const [score, setScore] = useState(0);\n  const [deleteChances, setDeleteChances] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [wordStatus, setWordStatus] = useState(null); // null, 'valid', or 'invalid'\n\n  // Generate a random letter based on frequency distribution\n  const generateRandomLetter = useCallback(() => {\n    const letters = [];\n    Object.entries(LETTER_FREQUENCIES).forEach(([letter, frequency]) => {\n      for (let i = 0; i < frequency; i++) {\n        letters.push(letter);\n      }\n    });\n    const randomIndex = Math.floor(Math.random() * letters.length);\n    return letters[randomIndex];\n  }, []);\n\n  // Initialize the game\n  useEffect(() => {\n    if (!currentLetter) {\n      setCurrentLetter(generateRandomLetter());\n      setNextLetter(generateRandomLetter());\n    }\n  }, [currentLetter, generateRandomLetter]);\n\n  // Check if the game is over (all columns are full)\n  const checkGameOver = useCallback(currentGrid => {\n    const isGameOver = currentGrid.every(column => column[0] !== null);\n    setGameOver(isGameOver);\n  }, []);\n\n  // Drop the current letter into the selected column\n  const dropLetter = useCallback(() => {\n    if (gameOver) return;\n    const newGrid = [...grid];\n    const column = newGrid[selectedColumn];\n\n    // Find the lowest empty slot in the column\n    let rowIndex = 7;\n    while (rowIndex >= 0 && column[rowIndex] !== null) {\n      rowIndex--;\n    }\n\n    // If column is full, show warning and return\n    if (rowIndex < 0) {\n      return;\n    }\n\n    // Drop the letter\n    column[rowIndex] = currentLetter;\n    setGrid(newGrid);\n\n    // Check if any column is full after this drop\n    checkGameOver(newGrid);\n\n    // Move to the next letter\n    setCurrentLetter(nextLetter);\n    setNextLetter(generateRandomLetter());\n  }, [gameOver, grid, selectedColumn, currentLetter, nextLetter, generateRandomLetter, checkGameOver]);\n\n  // Handle keyboard controls\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (gameOver) return;\n      switch (e.key) {\n        case 'ArrowLeft':\n          e.preventDefault();\n          setSelectedColumn(prev => Math.max(0, prev - 1));\n          break;\n        case 'ArrowRight':\n          e.preventDefault();\n          setSelectedColumn(prev => Math.min(7, prev + 1));\n          break;\n        case 'ArrowDown':\n        case ' ':\n          // Space bar\n          e.preventDefault();\n          dropLetter();\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [gameOver, dropLetter]);\n\n  // Handle cell click for word selection\n  const handleCellMouseDown = (colIndex, rowIndex) => {\n    if (grid[colIndex][rowIndex] === null) return;\n    setIsDragging(true);\n    setSelectedCells([{\n      col: colIndex,\n      row: rowIndex\n    }]);\n  };\n\n  // Handle mouse move for word selection\n  const handleCellMouseEnter = (colIndex, rowIndex) => {\n    if (!isDragging || grid[colIndex][rowIndex] === null) return;\n\n    // Check if this cell is adjacent to the last selected cell\n    const lastCell = selectedCells[selectedCells.length - 1];\n    const isAdjacent = Math.abs(colIndex - lastCell.col) <= 1 && Math.abs(rowIndex - lastCell.row) <= 1;\n    if (isAdjacent) {\n      // Check if this cell is already selected\n      const alreadySelected = selectedCells.some(cell => cell.col === colIndex && cell.row === rowIndex);\n      if (!alreadySelected) {\n        setSelectedCells([...selectedCells, {\n          col: colIndex,\n          row: rowIndex\n        }]);\n      }\n    }\n  };\n\n  // Handle mouse up to end word selection\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n\n  // Get the selected word as a string\n  const getSelectedWord = () => {\n    return selectedCells.map(cell => grid[cell.col][cell.row]).join('').toLowerCase();\n  };\n\n  // Submit the selected word\n  const submitWord = () => {\n    const word = getSelectedWord();\n    console.log(\"Submitting word:\", word);\n\n    // Word must be at least 3 letters\n    if (word.length < 3) {\n      setWordStatus('invalid');\n      setTimeout(() => setWordStatus(null), 800);\n      return;\n    }\n\n    // Check if word is valid\n    if (WORD_LIST[word]) {\n      setWordStatus('valid');\n      console.log(\"Word is valid!\");\n\n      // Calculate score\n      const wordScore = selectedCells.reduce((sum, cell) => sum + LETTER_VALUES[grid[cell.col][cell.row]], 0);\n      const newScore = score + wordScore;\n      setScore(newScore);\n      console.log(\"New score:\", newScore);\n\n      // Award Delete Chance for every 10 points\n      const newDeleteChances = Math.floor(newScore / 10) - Math.floor(score / 10);\n      if (newDeleteChances > 0) {\n        setDeleteChances(prev => prev + newDeleteChances);\n      }\n\n      // Create a new grid copy\n      const newGrid = JSON.parse(JSON.stringify(grid));\n\n      // Remove the letters and apply gravity\n      selectedCells.forEach(cell => {\n        for (let row = cell.row; row > 0; row--) {\n          newGrid[cell.col][row] = newGrid[cell.col][row - 1];\n        }\n        newGrid[cell.col][0] = null;\n      });\n\n      // Update the grid state\n      setGrid(newGrid);\n\n      // Reset word status after animation\n      setTimeout(() => setWordStatus(null), 800);\n    } else {\n      console.log(\"Word is invalid!\");\n      setWordStatus('invalid');\n      setTimeout(() => setWordStatus(null), 800);\n    }\n\n    // Clear selection\n    setSelectedCells([]);\n  };\n\n  // Use a Delete Chance to remove a letter\n  const useDeleteChance = () => {\n    if (deleteChances <= 0 || selectedCells.length !== 1) return;\n    const cell = selectedCells[0];\n    if (grid[cell.col][cell.row] === null) return;\n    const newGrid = [...grid];\n\n    // Apply gravity effect\n    for (let row = cell.row; row > 0; row--) {\n      newGrid[cell.col][row] = newGrid[cell.col][row - 1];\n    }\n    newGrid[cell.col][0] = null;\n    setGrid(newGrid);\n    setDeleteChances(prev => prev - 1);\n    setSelectedCells([]);\n  };\n\n  // Reset the game\n  const resetGame = () => {\n    setGrid(Array(8).fill().map(() => Array(8).fill(null)));\n    setCurrentLetter(generateRandomLetter());\n    setNextLetter(generateRandomLetter());\n    setSelectedColumn(3);\n    setSelectedCells([]);\n    setScore(0);\n    setDeleteChances(0);\n    setGameOver(false);\n    setWordStatus(null);\n  };\n\n  // Render the game\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-black p-4 relative overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 bg-[radial-gradient(ellipse_at_center,rgba(255,255,255,0.15)_0%,rgba(0,0,0,0)_80%)]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stars absolute inset-0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShootingStars, {\n      starColor: \"#9E00FF\",\n      trailColor: \"#2EB9DF\",\n      minSpeed: 15,\n      maxSpeed: 35,\n      minDelay: 1000,\n      maxDelay: 3000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShootingStars, {\n      starColor: \"#FF0099\",\n      trailColor: \"#FFB800\",\n      minSpeed: 10,\n      maxSpeed: 25,\n      minDelay: 2000,\n      maxDelay: 4000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShootingStars, {\n      starColor: \"#00FF9E\",\n      trailColor: \"#00B8FF\",\n      minSpeed: 20,\n      maxSpeed: 40,\n      minDelay: 1500,\n      maxDelay: 3500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4 text-white relative z-10\",\n      children: \"Letter Drop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 flex items-center justify-between w-full max-w-md relative z-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg font-semibold text-white\",\n          children: [\"Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white\",\n          children: [\"Delete Chances: \", deleteChances]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1 text-white\",\n          children: \"Next:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-8 h-8 flex items-center justify-center bg-gray-200 rounded\",\n          children: nextLetter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative mb-4 w-96 flex justify-start h-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-12 h-12 flex flex-col items-center justify-center bg-blue-500 text-white font-bold rounded-full text-xl absolute bottom-0 transition-all duration-150\",\n        style: {\n          left: `${selectedColumn * 48}px`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"leading-none\",\n          children: currentLetter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs leading-none mt-1\",\n          children: LETTER_VALUES[currentLetter]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-96 bg-white bg-opacity-10 rounded shadow-lg overflow-hidden backdrop-blur-sm z-10\",\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseUp,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row w-96\",\n        children: grid.map((column, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col w-12\",\n          children: column.map((cell, rowIndex) => {\n            const isSelected = selectedCells.some(selectedCell => selectedCell.col === colIndex && selectedCell.row === rowIndex);\n            const cellStyle = isSelected ? wordStatus === 'valid' ? 'bg-green-300 bg-opacity-70' : wordStatus === 'invalid' ? 'bg-red-300 bg-opacity-70' : 'bg-blue-200 bg-opacity-70' : 'bg-black bg-opacity-40';\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `w-12 h-12 flex items-center justify-center border border-gray-700 cursor-pointer ${cellStyle}`,\n              onMouseDown: () => handleCellMouseDown(colIndex, rowIndex),\n              onMouseEnter: () => handleCellMouseEnter(colIndex, rowIndex),\n              onClick: () => setSelectedColumn(colIndex),\n              children: cell ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-10 h-10 rounded-full bg-blue-500 text-white flex flex-col items-center justify-center shadow-lg\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-lg font-bold leading-none\",\n                  children: cell\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs leading-none mt-1\",\n                  children: LETTER_VALUES[cell]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 23\n              }, this) : null\n            }, `${colIndex}-${rowIndex}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 19\n            }, this);\n          })\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-0 w-12 h-full bg-yellow-100 opacity-30 pointer-events-none transition-all duration-150\",\n        style: {\n          left: `${selectedColumn * 3}rem`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-0 left-0 w-full\",\n        children: grid.map((column, colIndex) => column[0] !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-0 text-xs text-white bg-red-500 p-1\",\n          style: {\n            left: `${colIndex * 3}rem`\n          },\n          children: \"Full\"\n        }, `full-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex space-x-4 relative z-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded shadow-lg\",\n        onClick: dropLetter,\n        disabled: gameOver || grid[selectedColumn][0] !== null,\n        children: \"Drop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `bg-emerald-600 hover:bg-emerald-700 text-white px-4 py-2 rounded shadow-lg ${selectedCells.length < 3 ? 'opacity-50 cursor-not-allowed' : ''}`,\n        onClick: submitWord,\n        disabled: selectedCells.length < 3,\n        children: \"Submit Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `bg-rose-600 hover:bg-rose-700 text-white px-4 py-2 rounded shadow-lg ${deleteChances <= 0 || selectedCells.length !== 1 ? 'opacity-50 cursor-not-allowed' : ''}`,\n        onClick: useDeleteChance,\n        disabled: deleteChances <= 0 || selectedCells.length !== 1,\n        children: [\"Delete (\", deleteChances, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-gray-800 bg-opacity-80 backdrop-blur-sm text-white rounded text-center shadow-lg relative z-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-2\",\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl\",\n        children: [\"Final Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-4 bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded\",\n        onClick: resetGame,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-gray-800 bg-opacity-60 backdrop-blur-sm rounded max-w-md text-sm text-white shadow-lg relative z-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-bold mb-2\",\n        children: \"How to Play:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-disc pl-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Use arrow keys or click to move the current letter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Press Down/Space or click Drop to place the letter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Click and drag to select letters (at least 3) to form words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Click Submit to clear words and earn points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Earn Delete Chances for every 10 points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Game ends when all columns are full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .stars {\n          background-image: \n            radial-gradient(2px 2px at 20px 30px, #eee, rgba(0,0,0,0)),\n            radial-gradient(2px 2px at 40px 70px, #fff, rgba(0,0,0,0)),\n            radial-gradient(2px 2px at 50px 160px, #ddd, rgba(0,0,0,0)),\n            radial-gradient(2px 2px at 90px 40px, #fff, rgba(0,0,0,0)),\n            radial-gradient(2px 2px at 130px 80px, #fff, rgba(0,0,0,0)),\n            radial-gradient(2px 2px at 160px 120px, #ddd, rgba(0,0,0,0));\n          background-repeat: repeat;\n          background-size: 200px 200px;\n          animation: twinkle 5s ease-in-out infinite;\n          opacity: 0.5;\n        }\n\n        @keyframes twinkle {\n          0% { opacity: 0.5; }\n          50% { opacity: 0.8; }\n          100% { opacity: 0.5; }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 403,\n    columnNumber: 5\n  }, this);\n};\n_s2(LetterDropGame, \"lVa+Js84TJi8g3WUIRFK+acUIdM=\");\n_c2 = LetterDropGame;\nexport default LetterDropGame;\nvar _c, _c2;\n$RefreshReg$(_c, \"ShootingStars\");\n$RefreshReg$(_c2, \"LetterDropGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","jsxDEV","_jsxDEV","LETTER_FREQUENCIES","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","LETTER_VALUES","WORD_LIST","cn","classes","filter","Boolean","join","ShootingStars","minSpeed","maxSpeed","minDelay","maxDelay","starColor","trailColor","starWidth","starHeight","className","_s","star","setStar","svgRef","getRandomStartPoint","side","Math","floor","random","offset","window","innerWidth","x","y","angle","innerHeight","createStar","newStar","id","Date","now","scale","speed","distance","randomDelay","setTimeout","moveStar","prevStar","newX","cos","PI","newY","sin","newDistance","newScale","animationFrame","requestAnimationFrame","cancelAnimationFrame","ref","children","width","height","fill","transform","fileName","_jsxFileName","lineNumber","columnNumber","x1","y1","x2","y2","style","stopColor","stopOpacity","_c","LetterDropGame","_s2","grid","setGrid","Array","map","currentLetter","setCurrentLetter","nextLetter","setNextLetter","selectedColumn","setSelectedColumn","selectedCells","setSelectedCells","score","setScore","deleteChances","setDeleteChances","gameOver","setGameOver","isDragging","setIsDragging","wordStatus","setWordStatus","generateRandomLetter","letters","Object","entries","forEach","letter","frequency","i","push","randomIndex","length","checkGameOver","currentGrid","isGameOver","every","column","dropLetter","newGrid","rowIndex","handleKeyDown","e","key","preventDefault","prev","max","min","addEventListener","removeEventListener","handleCellMouseDown","colIndex","col","row","handleCellMouseEnter","lastCell","isAdjacent","abs","alreadySelected","some","cell","handleMouseUp","getSelectedWord","toLowerCase","submitWord","word","console","log","wordScore","reduce","sum","newScore","newDeleteChances","JSON","parse","stringify","useDeleteChance","resetGame","left","onMouseUp","onMouseLeave","isSelected","selectedCell","cellStyle","onMouseDown","onMouseEnter","onClick","disabled","jsx","_c2","$RefreshReg$"],"sources":["/Users/megansmacmini/grasped-dev.github.io/src/LetterDropGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\n\n// Letter frequency distribution to bias toward common letters\nconst LETTER_FREQUENCIES = {\n  A: 9, B: 2, C: 2, D: 4, E: 12, F: 2, G: 3, H: 2, I: 9,\n  J: 1, K: 1, L: 4, M: 2, N: 6, O: 8, P: 2, Q: 1, R: 6,\n  S: 4, T: 6, U: 4, V: 2, W: 2, X: 1, Y: 2, Z: 1\n};\n\n// Scrabble letter values\nconst LETTER_VALUES = {\n  A: 1, B: 3, C: 3, D: 2, E: 1, F: 4, G: 2, H: 4, I: 1,\n  J: 8, K: 5, L: 1, M: 3, N: 1, O: 1, P: 3, Q: 10, R: 1,\n  S: 1, T: 1, U: 1, V: 4, W: 4, X: 8, Y: 4, Z: 10\n};\n\n// English word list for validation (simplified for demo)\n// In a full implementation, you would import a comprehensive dictionary\nconst WORD_LIST = {\n  \"apple\": true, \"banana\": true, \"cat\": true, \"dog\": true, \"elephant\": true,\n  \"fox\": true, \"giraffe\": true, \"hat\": true, \"ice\": true, \"jacket\": true,\n  \"kite\": true, \"lamp\": true, \"mouse\": true, \"nest\": true, \"orange\": true,\n  \"pen\": true, \"queen\": true, \"rat\": true, \"sun\": true, \"tree\": true,\n  \"umbrella\": true, \"vase\": true, \"water\": true, \"xylophone\": true, \"yacht\": true,\n  \"zebra\": true, \"car\": true, \"ball\": true, \"book\": true, \"door\": true,\n  \"ear\": true, \"fish\": true, \"game\": true, \"hand\": true, \"ink\": true, \n  \"jar\": true, \"key\": true, \"leg\": true, \"man\": true, \"nose\": true,\n  \"owl\": true, \"pig\": true, \"quilt\": true, \"road\": true, \"sea\": true,\n  \"toe\": true, \"van\": true, \"wing\": true, \"box\": true, \"yak\": true,\n  \"zoo\": true, \"and\": true, \"bat\": true, \"cab\": true, \"dam\": true,\n  \"eel\": true, \"fan\": true, \"gun\": true, \"hat\": true, \"inn\": true,\n  \"joy\": true, \"kit\": true, \"lid\": true, \"map\": true, \"net\": true,\n  \"oil\": true, \"pat\": true, \"red\": true, \"sad\": true, \"tag\": true,\n  \"use\": true, \"vet\": true, \"win\": true, \"yes\": true, \"zip\": true,\n  \"ace\": true, \"bad\": true, \"cup\": true, \"dry\": true, \"end\": true,\n  \"fat\": true, \"gas\": true, \"hot\": true, \"ice\": true, \"job\": true,\n  \"kid\": true, \"low\": true, \"mad\": true, \"nap\": true, \"odd\": true,\n  \"pal\": true, \"ran\": true, \"sit\": true, \"top\": true, \"but\": true,\n  \"the\": true, \"and\": true, \"you\": true, \"for\": true, \"not\": true,\n  \"all\": true, \"new\": true, \"day\": true, \"get\": true, \"was\": true,\n  \"can\": true, \"out\": true, \"see\": true, \"use\": true, \"now\": true,\n  \"who\": true, \"may\": true, \"way\": true, \"did\": true, \"big\": true,\n  \"old\": true, \"ask\": true, \"few\": true, \"far\": true, \"let\": true,\n  \"run\": true, \"try\": true, \"set\": true, \"put\": true, \"any\": true,\n  \"his\": true, \"her\": true, \"him\": true, \"our\": true, \"she\": true\n};\n\n// Utility function for class name merging\nconst cn = (...classes) => classes.filter(Boolean).join(' ');\n\n// ShootingStars component\nconst ShootingStars = ({\n  minSpeed = 10,\n  maxSpeed = 30,\n  minDelay = 1200,\n  maxDelay = 4200,\n  starColor = \"#9E00FF\",\n  trailColor = \"#2EB9DF\",\n  starWidth = 10,\n  starHeight = 1,\n  className,\n}) => {\n  const [star, setStar] = useState(null);\n  const svgRef = useRef(null);\n\n  const getRandomStartPoint = () => {\n    const side = Math.floor(Math.random() * 4);\n    const offset = Math.random() * window.innerWidth;\n\n    switch (side) {\n      case 0:\n        return { x: offset, y: 0, angle: 45 };\n      case 1:\n        return { x: window.innerWidth, y: offset, angle: 135 };\n      case 2:\n        return { x: offset, y: window.innerHeight, angle: 225 };\n      case 3:\n        return { x: 0, y: offset, angle: 315 };\n      default:\n        return { x: 0, y: 0, angle: 45 };\n    }\n  };\n\n  useEffect(() => {\n    const createStar = () => {\n      const { x, y, angle } = getRandomStartPoint();\n      const newStar = {\n        id: Date.now(),\n        x,\n        y,\n        angle,\n        scale: 1,\n        speed: Math.random() * (maxSpeed - minSpeed) + minSpeed,\n        distance: 0,\n      };\n      setStar(newStar);\n\n      const randomDelay = Math.random() * (maxDelay - minDelay) + minDelay;\n      setTimeout(createStar, randomDelay);\n    };\n\n    createStar();\n\n    return () => {};\n  }, [minSpeed, maxSpeed, minDelay, maxDelay]);\n\n  useEffect(() => {\n    const moveStar = () => {\n      if (star) {\n        setStar((prevStar) => {\n          if (!prevStar) return null;\n          const newX =\n            prevStar.x +\n            prevStar.speed * Math.cos((prevStar.angle * Math.PI) / 180);\n          const newY =\n            prevStar.y +\n            prevStar.speed * Math.sin((prevStar.angle * Math.PI) / 180);\n          const newDistance = prevStar.distance + prevStar.speed;\n          const newScale = 1 + newDistance / 100;\n          if (\n            newX < -20 ||\n            newX > window.innerWidth + 20 ||\n            newY < -20 ||\n            newY > window.innerHeight + 20\n          ) {\n            return null;\n          }\n          return {\n            ...prevStar,\n            x: newX,\n            y: newY,\n            distance: newDistance,\n            scale: newScale,\n          };\n        });\n      }\n    };\n\n    const animationFrame = requestAnimationFrame(moveStar);\n    return () => cancelAnimationFrame(animationFrame);\n  }, [star]);\n\n  return (\n    <svg\n      ref={svgRef}\n      className={cn(\"w-full h-full absolute inset-0\", className)}\n    >\n      {star && (\n        <rect\n          key={star.id}\n          x={star.x}\n          y={star.y}\n          width={starWidth * star.scale}\n          height={starHeight}\n          fill=\"url(#gradient)\"\n          transform={`rotate(${star.angle}, ${\n            star.x + (starWidth * star.scale) / 2\n          }, ${star.y + starHeight / 2})`}\n        />\n      )}\n      <defs>\n        <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n          <stop offset=\"0%\" style={{ stopColor: trailColor, stopOpacity: 0 }} />\n          <stop\n            offset=\"100%\"\n            style={{ stopColor: starColor, stopOpacity: 1 }}\n          />\n        </linearGradient>\n      </defs>\n    </svg>\n  );\n};\n\nconst LetterDropGame = () => {\n  // Game state\n  const [grid, setGrid] = useState(Array(8).fill().map(() => Array(8).fill(null)));\n  const [currentLetter, setCurrentLetter] = useState('');\n  const [nextLetter, setNextLetter] = useState('');\n  const [selectedColumn, setSelectedColumn] = useState(3);\n  const [selectedCells, setSelectedCells] = useState([]);\n  const [score, setScore] = useState(0);\n  const [deleteChances, setDeleteChances] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [wordStatus, setWordStatus] = useState(null); // null, 'valid', or 'invalid'\n\n  // Generate a random letter based on frequency distribution\n  const generateRandomLetter = useCallback(() => {\n    const letters = [];\n    Object.entries(LETTER_FREQUENCIES).forEach(([letter, frequency]) => {\n      for (let i = 0; i < frequency; i++) {\n        letters.push(letter);\n      }\n    });\n    const randomIndex = Math.floor(Math.random() * letters.length);\n    return letters[randomIndex];\n  }, []);\n\n  // Initialize the game\n  useEffect(() => {\n    if (!currentLetter) {\n      setCurrentLetter(generateRandomLetter());\n      setNextLetter(generateRandomLetter());\n    }\n  }, [currentLetter, generateRandomLetter]);\n\n  // Check if the game is over (all columns are full)\n  const checkGameOver = useCallback((currentGrid) => {\n    const isGameOver = currentGrid.every(column => column[0] !== null);\n    setGameOver(isGameOver);\n  }, []);\n\n  // Drop the current letter into the selected column\n  const dropLetter = useCallback(() => {\n    if (gameOver) return;\n\n    const newGrid = [...grid];\n    const column = newGrid[selectedColumn];\n\n    // Find the lowest empty slot in the column\n    let rowIndex = 7;\n    while (rowIndex >= 0 && column[rowIndex] !== null) {\n      rowIndex--;\n    }\n\n    // If column is full, show warning and return\n    if (rowIndex < 0) {\n      return;\n    }\n\n    // Drop the letter\n    column[rowIndex] = currentLetter;\n    setGrid(newGrid);\n\n    // Check if any column is full after this drop\n    checkGameOver(newGrid);\n\n    // Move to the next letter\n    setCurrentLetter(nextLetter);\n    setNextLetter(generateRandomLetter());\n  }, [gameOver, grid, selectedColumn, currentLetter, nextLetter, generateRandomLetter, checkGameOver]);\n\n  // Handle keyboard controls\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (gameOver) return;\n\n      switch (e.key) {\n        case 'ArrowLeft':\n          e.preventDefault();\n          setSelectedColumn(prev => Math.max(0, prev - 1));\n          break;\n        case 'ArrowRight':\n          e.preventDefault();\n          setSelectedColumn(prev => Math.min(7, prev + 1));\n          break;\n        case 'ArrowDown':\n        case ' ': // Space bar\n          e.preventDefault();\n          dropLetter();\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [gameOver, dropLetter]);\n\n  // Handle cell click for word selection\n  const handleCellMouseDown = (colIndex, rowIndex) => {\n    if (grid[colIndex][rowIndex] === null) return;\n    \n    setIsDragging(true);\n    setSelectedCells([{ col: colIndex, row: rowIndex }]);\n  };\n\n  // Handle mouse move for word selection\n  const handleCellMouseEnter = (colIndex, rowIndex) => {\n    if (!isDragging || grid[colIndex][rowIndex] === null) return;\n\n    // Check if this cell is adjacent to the last selected cell\n    const lastCell = selectedCells[selectedCells.length - 1];\n    const isAdjacent = \n      (Math.abs(colIndex - lastCell.col) <= 1 && Math.abs(rowIndex - lastCell.row) <= 1);\n\n    if (isAdjacent) {\n      // Check if this cell is already selected\n      const alreadySelected = selectedCells.some(\n        cell => cell.col === colIndex && cell.row === rowIndex\n      );\n\n      if (!alreadySelected) {\n        setSelectedCells([...selectedCells, { col: colIndex, row: rowIndex }]);\n      }\n    }\n  };\n\n  // Handle mouse up to end word selection\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n\n  // Get the selected word as a string\n  const getSelectedWord = () => {\n    return selectedCells.map(cell => grid[cell.col][cell.row]).join('').toLowerCase();\n  };\n\n  // Submit the selected word\n  const submitWord = () => {\n    const word = getSelectedWord();\n    console.log(\"Submitting word:\", word);\n    \n    // Word must be at least 3 letters\n    if (word.length < 3) {\n      setWordStatus('invalid');\n      setTimeout(() => setWordStatus(null), 800);\n      return;\n    }\n\n    // Check if word is valid\n    if (WORD_LIST[word]) {\n      setWordStatus('valid');\n      console.log(\"Word is valid!\");\n      \n      // Calculate score\n      const wordScore = selectedCells.reduce(\n        (sum, cell) => sum + LETTER_VALUES[grid[cell.col][cell.row]], 0\n      );\n      \n      const newScore = score + wordScore;\n      setScore(newScore);\n      console.log(\"New score:\", newScore);\n      \n      // Award Delete Chance for every 10 points\n      const newDeleteChances = Math.floor(newScore / 10) - Math.floor(score / 10);\n      if (newDeleteChances > 0) {\n        setDeleteChances(prev => prev + newDeleteChances);\n      }\n      \n      // Create a new grid copy\n      const newGrid = JSON.parse(JSON.stringify(grid));\n      \n      // Remove the letters and apply gravity\n      selectedCells.forEach(cell => {\n        for (let row = cell.row; row > 0; row--) {\n          newGrid[cell.col][row] = newGrid[cell.col][row - 1];\n        }\n        newGrid[cell.col][0] = null;\n      });\n      \n      // Update the grid state\n      setGrid(newGrid);\n      \n      // Reset word status after animation\n      setTimeout(() => setWordStatus(null), 800);\n    } else {\n      console.log(\"Word is invalid!\");\n      setWordStatus('invalid');\n      setTimeout(() => setWordStatus(null), 800);\n    }\n    \n    // Clear selection\n    setSelectedCells([]);\n  };\n\n  // Use a Delete Chance to remove a letter\n  const useDeleteChance = () => {\n    if (deleteChances <= 0 || selectedCells.length !== 1) return;\n    \n    const cell = selectedCells[0];\n    if (grid[cell.col][cell.row] === null) return;\n    \n    const newGrid = [...grid];\n    \n    // Apply gravity effect\n    for (let row = cell.row; row > 0; row--) {\n      newGrid[cell.col][row] = newGrid[cell.col][row - 1];\n    }\n    newGrid[cell.col][0] = null;\n    \n    setGrid(newGrid);\n    setDeleteChances(prev => prev - 1);\n    setSelectedCells([]);\n  };\n\n  // Reset the game\n  const resetGame = () => {\n    setGrid(Array(8).fill().map(() => Array(8).fill(null)));\n    setCurrentLetter(generateRandomLetter());\n    setNextLetter(generateRandomLetter());\n    setSelectedColumn(3);\n    setSelectedCells([]);\n    setScore(0);\n    setDeleteChances(0);\n    setGameOver(false);\n    setWordStatus(null);\n  };\n\n  // Render the game\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-black p-4 relative overflow-hidden\">\n      {/* Background with stars */}\n      <div className=\"absolute inset-0\">\n        <div className=\"absolute inset-0 bg-[radial-gradient(ellipse_at_center,rgba(255,255,255,0.15)_0%,rgba(0,0,0,0)_80%)]\" />\n        <div className=\"stars absolute inset-0\" />\n      </div>\n      \n      {/* Shooting stars effects */}\n      <ShootingStars\n        starColor=\"#9E00FF\"\n        trailColor=\"#2EB9DF\"\n        minSpeed={15}\n        maxSpeed={35}\n        minDelay={1000}\n        maxDelay={3000}\n      />\n      <ShootingStars\n        starColor=\"#FF0099\"\n        trailColor=\"#FFB800\"\n        minSpeed={10}\n        maxSpeed={25}\n        minDelay={2000}\n        maxDelay={4000}\n      />\n      <ShootingStars\n        starColor=\"#00FF9E\"\n        trailColor=\"#00B8FF\"\n        minSpeed={20}\n        maxSpeed={40}\n        minDelay={1500}\n        maxDelay={3500}\n      />\n      \n      <h1 className=\"text-3xl font-bold mb-4 text-white relative z-10\">Letter Drop</h1>\n      \n      {/* Game controls and info */}\n      <div className=\"mb-4 flex items-center justify-between w-full max-w-md relative z-10\">\n        <div>\n          <p className=\"text-lg font-semibold text-white\">Score: {score}</p>\n          <p className=\"text-white\">Delete Chances: {deleteChances}</p>\n        </div>\n        \n        <div className=\"flex flex-col items-center\">\n          <p className=\"mb-1 text-white\">Next:</p>\n          <div className=\"w-8 h-8 flex items-center justify-center bg-gray-200 rounded\">\n            {nextLetter}\n          </div>\n        </div>\n      </div>\n      \n      {/* Current letter and column selection */}\n      <div className=\"relative mb-4 w-96 flex justify-start h-12\">\n        <div \n          className=\"w-12 h-12 flex flex-col items-center justify-center bg-blue-500 text-white font-bold rounded-full text-xl absolute bottom-0 transition-all duration-150\"\n          style={{ left: `${selectedColumn * 48}px` }}\n        >\n          <span className=\"leading-none\">{currentLetter}</span>\n          <span className=\"text-xs leading-none mt-1\">{LETTER_VALUES[currentLetter]}</span>\n        </div>\n      </div>\n      \n      {/* Game grid */}\n      <div \n        className=\"relative w-96 bg-white bg-opacity-10 rounded shadow-lg overflow-hidden backdrop-blur-sm z-10\"\n        onMouseUp={handleMouseUp}\n        onMouseLeave={handleMouseUp}\n      >\n        <div className=\"flex flex-row w-96\">\n          {grid.map((column, colIndex) => (\n            <div key={colIndex} className=\"flex flex-col w-12\">\n              {column.map((cell, rowIndex) => {\n                const isSelected = selectedCells.some(\n                  selectedCell => selectedCell.col === colIndex && selectedCell.row === rowIndex\n                );\n                \n                const cellStyle = isSelected\n                  ? wordStatus === 'valid'\n                    ? 'bg-green-300 bg-opacity-70'\n                    : wordStatus === 'invalid'\n                      ? 'bg-red-300 bg-opacity-70'\n                      : 'bg-blue-200 bg-opacity-70'\n                  : 'bg-black bg-opacity-40';\n                \n                return (\n                  <div\n                    key={`${colIndex}-${rowIndex}`}\n                    className={`w-12 h-12 flex items-center justify-center border border-gray-700 cursor-pointer ${cellStyle}`}\n                    onMouseDown={() => handleCellMouseDown(colIndex, rowIndex)}\n                    onMouseEnter={() => handleCellMouseEnter(colIndex, rowIndex)}\n                    onClick={() => setSelectedColumn(colIndex)}\n                  >\n                    {cell ? (\n                      <div className=\"w-10 h-10 rounded-full bg-blue-500 text-white flex flex-col items-center justify-center shadow-lg\">\n                        <span className=\"text-lg font-bold leading-none\">{cell}</span>\n                        <span className=\"text-xs leading-none mt-1\">{LETTER_VALUES[cell]}</span>\n                      </div>\n                    ) : null}\n                  </div>\n                );\n              })}\n            </div>\n          ))}\n        </div>\n        \n        {/* Column highlighter */}\n        <div \n          className=\"absolute top-0 w-12 h-full bg-yellow-100 opacity-30 pointer-events-none transition-all duration-150\"\n          style={{ left: `${selectedColumn * 3}rem` }}\n        ></div>\n        \n        {/* Column full indicators */}\n        <div className=\"absolute top-0 left-0 w-full\">\n          {grid.map((column, colIndex) => (\n            column[0] !== null && (\n              <div \n                key={`full-${colIndex}`} \n                className=\"absolute top-0 text-xs text-white bg-red-500 p-1\"\n                style={{ left: `${colIndex * 3}rem` }}\n              >\n                Full\n              </div>\n            )\n          ))}\n        </div>\n      </div>\n      \n      {/* Game buttons */}\n      <div className=\"mt-4 flex space-x-4 relative z-10\">\n        <button\n          className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded shadow-lg\"\n          onClick={dropLetter}\n          disabled={gameOver || grid[selectedColumn][0] !== null}\n        >\n          Drop\n        </button>\n        \n        <button\n          className={`bg-emerald-600 hover:bg-emerald-700 text-white px-4 py-2 rounded shadow-lg ${\n            selectedCells.length < 3 ? 'opacity-50 cursor-not-allowed' : ''\n          }`}\n          onClick={submitWord}\n          disabled={selectedCells.length < 3}\n        >\n          Submit Word\n        </button>\n        \n        <button\n          className={`bg-rose-600 hover:bg-rose-700 text-white px-4 py-2 rounded shadow-lg ${\n            deleteChances <= 0 || selectedCells.length !== 1 ? 'opacity-50 cursor-not-allowed' : ''\n          }`}\n          onClick={useDeleteChance}\n          disabled={deleteChances <= 0 || selectedCells.length !== 1}\n        >\n          Delete ({deleteChances})\n        </button>\n      </div>\n      \n      {/* Game over message */}\n      {gameOver && (\n        <div className=\"mt-6 p-4 bg-gray-800 bg-opacity-80 backdrop-blur-sm text-white rounded text-center shadow-lg relative z-10\">\n          <h2 className=\"text-2xl font-bold mb-2\">Game Over!</h2>\n          <p className=\"text-xl\">Final Score: {score}</p>\n          <button\n            className=\"mt-4 bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded\"\n            onClick={resetGame}\n          >\n            Play Again\n          </button>\n        </div>\n      )}\n      \n      {/* Game instructions */}\n      <div className=\"mt-6 p-4 bg-gray-800 bg-opacity-60 backdrop-blur-sm rounded max-w-md text-sm text-white shadow-lg relative z-10\">\n        <h3 className=\"font-bold mb-2\">How to Play:</h3>\n        <ul className=\"list-disc pl-4\">\n          <li>Use arrow keys or click to move the current letter</li>\n          <li>Press Down/Space or click Drop to place the letter</li>\n          <li>Click and drag to select letters (at least 3) to form words</li>\n          <li>Click Submit to clear words and earn points</li>\n          <li>Earn Delete Chances for every 10 points</li>\n          <li>Game ends when all columns are full</li>\n        </ul>\n      </div>\n      \n      {/* Stars background animation style */}\n      <style jsx>{`\n        .stars {\n          background-image: \n            radial-gradient(2px 2px at 20px 30px, #eee, rgba(0,0,0,0)),\n            radial-gradient(2px 2px at 40px 70px, #fff, rgba(0,0,0,0)),\n            radial-gradient(2px 2px at 50px 160px, #ddd, rgba(0,0,0,0)),\n            radial-gradient(2px 2px at 90px 40px, #fff, rgba(0,0,0,0)),\n            radial-gradient(2px 2px at 130px 80px, #fff, rgba(0,0,0,0)),\n            radial-gradient(2px 2px at 160px 120px, #ddd, rgba(0,0,0,0));\n          background-repeat: repeat;\n          background-size: 200px 200px;\n          animation: twinkle 5s ease-in-out infinite;\n          opacity: 0.5;\n        }\n\n        @keyframes twinkle {\n          0% { opacity: 0.5; }\n          50% { opacity: 0.8; }\n          100% { opacity: 0.5; }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default LetterDropGame;"],"mappings":"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,EAAE,IAAI;EAC/D,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAC/D,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAC/D,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAC/D,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAC/D,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAC/D,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAC/D,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAC/D,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAC/D,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAC/D,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAC/D,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAC/D,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,KAAK,EAAE,IA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}